# handlers/admin/admin_commands.py
# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º

import logging
from config import ADMIN_CHAT_ID
from repositories.request_repo import get_all_users

logger = logging.getLogger(__name__)

async def admin_restart_command(update, context):
    """–ú—è–≥–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ - –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π"""
    user_id = update.effective_user.id
    # ADMIN_CHAT_ID –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏–≤–æ–¥–∏–º –∫ str
    if str(user_id) != str(ADMIN_CHAT_ID):
        await update.message.reply_text("‚õîÔ∏è –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.")
        return
    
    await update.message.reply_text("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    try:
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (user_data, chat_data)
        context.user_data.clear()
        context.chat_data.clear()
        
        # –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
        # –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ ConversationHandler —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await update.message.reply_text("üßπ –û—á–∏—Å—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤...")
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏–∑ —Ñ–∞–π–ª–æ–≤
        
        await update.message.reply_text("‚úÖ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω! –í—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—á–∏—â–µ–Ω—ã, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ: {e}")
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å, —Ö–æ—Ç—è –±—ã –æ—á–∏—Å—Ç–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await update.message.reply_text("üîÑ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω (–æ—á–∏—â–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ). –í—Å–µ –¥–∏–∞–ª–æ–≥–∏ —Å–±—Ä–æ—à–µ–Ω—ã.")

async def admin_hard_restart_command(update, context):
    """–ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    user_id = update.effective_user.id
    # ADMIN_CHAT_ID –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏–≤–æ–¥–∏–º –∫ str
    if str(user_id) != str(ADMIN_CHAT_ID):
        await update.message.reply_text("‚õîÔ∏è –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞.")
        return
    
    await update.message.reply_text("üõë –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    try:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º polling
        await context.application.stop()
        await context.application.shutdown()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        await update.message.reply_text("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∑–∞–Ω–æ–≤–æ.")
        
        # –í—ã—Ö–æ–¥–∏–º –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        import sys
        sys.exit(0)
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ: {e}")
        await update.message.reply_text("üîÑ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω (–æ—á–∏—â–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ). –í—Å–µ –¥–∏–∞–ª–æ–≥–∏ —Å–±—Ä–æ—à–µ–Ω—ã.")

async def admin_broadcast_command(update, context):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    user_id = update.effective_user.id
    # ADMIN_CHAT_ID –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏–≤–æ–¥–∏–º –∫ str
    if str(user_id) != str(ADMIN_CHAT_ID):
        await update.message.reply_text("‚õîÔ∏è –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    if not update.message.text or len(update.message.text.split()) < 2:
        await update.message.reply_text(
            "üì¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /broadcast <—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è>\n\n"
            "–ü—Ä–∏–º–µ—Ä: /broadcast üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã 15.08.2024 —Å 10:00 –¥–æ 12:00"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (—É–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—É /broadcast)
    message_text = update.message.text.replace('/broadcast', '').strip()
    
    if not message_text:
        await update.message.reply_text("‚ùå –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
        return
    
    await update.message.reply_text("üì¢ –ù–∞—á–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        all_users = get_all_users()
        if not all_users:
            await update.message.reply_text("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        success_count = 0
        error_count = 0
        
        for user in all_users:
            try:
                user_id = user['user_id']
                await context.bot.send_message(
                    chat_id=user_id,
                    text=f"üì¢ **–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:**\n\n{message_text}",
                    parse_mode="HTML"
                )
                success_count += 1
            except Exception as e:
                error_count += 1
                # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        report = f"‚úÖ **–û—Ç—á–µ—Ç –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ:**\n\n"
        report += f"üì§ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {success_count}\n"
        if error_count > 0:
            report += f"‚ùå –û—à–∏–±–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏: {error_count}\n"
        report += f"üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n{message_text}"
        
        await update.message.reply_text(report, parse_mode="HTML")
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")

async def show_users_command(update, context):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    user_id = update.effective_user.id
    if str(user_id) != str(ADMIN_CHAT_ID):
        await update.message.reply_text("‚õîÔ∏è –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return
    
    try:
        all_users = get_all_users()
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return
    
    if not all_users:
        await update.message.reply_text("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –∏–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ.")
        return
    
    user_list = "\n".join([f"{u['user_id']}: {u['full_name']} (@{u['username']}) - {u['role']}" for u in all_users])
    await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ:\n{user_list}")

async def refresh_operators_command(update, context):
    """–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤"""
    user_id = update.effective_user.id
    # ADMIN_CHAT_ID –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π, –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏–≤–æ–¥–∏–º –∫ str
    if str(user_id) != str(ADMIN_CHAT_ID):
        await update.message.reply_text("‚õîÔ∏è –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤.")
        return
    
    from handlers.admin.admin_requests import get_operators_async
    try:
        operators = await get_operators_async()
        if operators:
            op_list = "\n".join([f"{op['user_id']}: {op['full_name']} (@{op['username']})" for op in operators])
            await update.message.reply_text(f"‚úÖ –°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω:\n{op_list}")
        else:
            await update.message.reply_text("‚ö†Ô∏è –û–ø–µ—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤: {e}") 